name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean previous builds
        run: |
          Remove-Item -Path ./frontend/dist, ./build, ./src/main/resources/templates/index.html, ./src/main/resources/static -Recurse -Force -ErrorAction SilentlyContinue

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Move frontend build files
        run: |
          # 确保目标目录存在
          New-Item -ItemType Directory -Force -Path src/main/resources/templates, src/main/resources/static | Out-Null

          # 移动index.html
          Move-Item -Path (Join-Path -Path "frontend" -ChildPath "dist/index.html") -Destination "src/main/resources/templates/"

          # 移动其他文件（递归）
          Get-ChildItem -Path "frontend/dist" -Exclude "index.html" | Copy-Item -Destination "src/main/resources/static/" -Recurse -Force

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build with Gradle
        run: ./gradlew.bat build

      - name: Verify build artifacts
        run: |
          if (-not (Test-Path -Path "./src/main/resources/templates/index.html")) { throw "index.html not found!" }
          if (-not (Test-Path -Path "./src/main/resources/static/assets")) { throw "Static assets missing!" }

          $jarFile = Get-ChildItem -Path "./build/libs/*.jar" | Select-Object -First 1
          if (-not $jarFile) { throw "No JAR file generated!" }
          if ($jarFile.Length -eq 0) { throw "JAR file is empty!" }
          Write-Output "Built JAR: $($jarFile.Name)"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/libs/*.jar
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean previous builds
        run: |
          rm -rf ./frontend/dist ./build ./src/main/resources/templates/index.html ./src/main/resources/static

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Move frontend build files
        run: |
          mkdir -p src/main/resources/templates src/main/resources/static
          mv frontend/dist/index.html src/main/resources/templates/
          rsync -a --exclude="index.html" frontend/dist/ src/main/resources/static/

      - name: Set up JDK 17 (for Gradle build)
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Verify build artifacts
        run: |
          [ -f "./src/main/resources/templates/index.html" ] || { echo "index.html not found!"; exit 1; }
          [ -d "./src/main/resources/static/assets" ] || { echo "Static assets missing!"; exit 1; }

          jar_file=$(ls ./build/libs/*.jar | head -n 1)
          [ -f "$jar_file" ] || { echo "No JAR file generated!"; exit 1; }
          [ -s "$jar_file" ] || { echo "JAR file is empty!"; exit 1; }
          echo "Built JAR: $(basename $jar_file)"
          echo "JAR_FILE=$(basename $jar_file)" >> $GITHUB_ENV

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install requests

      - name: Prepare cross-platform release packages
        run: |
          python built.py

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/libs/*.jar
            release-package-windows.zip
            release-package-linux.tar.gz
            release-package-macos.tar.gz
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}